@using Microsoft.AspNetCore.Html
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using ScribbleOpeAIAnalysis.Model
@{
    var targetList = (List<string>)ViewBag.target;
    var templateModel = ViewBag.templateModel as TemplateModel;
    var armUrl = ViewBag.armUrl as string;
}

@section Contents
{
    <link href="~/lib/prism/themes/prism.min.css" rel="stylesheet" id="prismLightTheme" />
    <link href="~/lib/prism/themes/prism-tomorrow.min.css" rel="stylesheet" id="prismDarkTheme" disabled />
    <style>
        /* Add smooth transition for theme changes */
        pre[class*="language-"] {
            transition: all 0.3s ease;
        }
        
        .code-container {
            border-radius: 8px;
            overflow: hidden;
            margin-bottom: 2rem;
        }
    </style>
}

<div class="hero-section fade-in">
    <div class="container">
        <h1 class="display-4">Infrastructure Templates</h1>
        <p class="lead text-body-secondary mb-5">Generated templates for your architecture components</p>

        <div class="features-grid">
            @if (targetList != null && targetList.Any())
            {
                foreach (string item in targetList)
                {
                    <div class="feature-card fade-in">
                        <div class="d-flex align-items-center mb-3">
                            <i class="bi bi-cpu me-3 fs-3 text-primary"></i>
                            <h4 class="mb-0">@item</h4>
                        </div>
                        <p class="text-body-secondary">Infrastructure component template</p>
                    </div>
                }
            }
        </div>

        <div class="row">
            <div class="mt-4 mb-4 d-flex justify-content-center">                <!-- Deploy to Azure Button -->
                <div class="d-flex align-items-center me-2">
                    @if (!string.IsNullOrEmpty(armUrl))
                    {
                        <a href="https://portal.azure.com/#create/Microsoft.Template/uri/@Uri.EscapeDataString(armUrl)" target="_blank" class="me-2">
                            <img src="https://aka.ms/deploytoazurebutton" alt="Deploy to Azure" />
                        </a>
                        <!-- Information Icon -->
                        <button type="button" class="btn btn-link p-0 ms-2" data-bs-toggle="modal" data-bs-target="#deployToAzureInfoModal">
                            <i class="bi bi-info-circle-fill text-primary"></i>
                        </button>
                    }
                </div>
                <!-- Add to Bicep Template Registry Button with Info Icon -->
                <div class="d-flex align-items-center me-2">
                    <!-- <a class="btn btn-secondary" asp-action="BicepRegistry" asp-route-armtemplateLink="@armUrl" target="_blank">Click to generate Bicep template for solution</a>-->
                    <form asp-action="BicepRegistry" method="post">
                        <!-- Hidden input to pass armUrl as armtemplateLink -->
                        <input type="hidden" name="armtemplateLink" value="@armUrl" />
                        <input type="hidden" name="architectureName" value="@templateModel?.Name" />
                        <button type="submit" class="btn btn-secondary">
                            Add to Global Template Library
                        </button>
                    </form>
                    <!-- Information Icon -->
                    <button type="button" class="btn btn-link p-0 ms-2" data-bs-toggle="modal" data-bs-target="#addToRegistryInfoModal">
                        <i class="bi bi-info-circle-fill text-secondary"></i>
                    </button>
                </div>

                <!-- Create Demo Deploy Package Button with Info Icon -->
                <div class="d-flex align-items-center">
                    <a href="@ViewBag.zipUrl" class="btn btn-success" target="_blank" data-bs-toggle="tooltip" data-bs-placement="top" data-bs-toggle="tooltip" data-bs-placement="top" title="This feature allows you to generate demo deployment package based on your current templates. Before you create the package do make sure your templates are tested and valid. It’s useful for testing and showcasing your infrastructure setup.">
                        Download Demo Deploy Package
                    </a>
                    <!-- Information Icon -->
                    <button type="button" class="btn btn-link p-0 ms-2" data-bs-toggle="tooltip" data-bs-placement="top" title="Create Demo Deploy Package">
                        <i class="bi bi-info-circle-fill text-success"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<hr />

<h2 class="display-6 text-center mb-4">Bicep template</h2>
<p class="text-center text-body-secondary small">AI generated templates might be inaccurate, please test and verify.</p>
<div class="container my-4">
    <div class="code-container" data-bs-theme="auto">
        <div data-prismjs-copy-timeout="500">
            <pre><code class="language-bicep" data-prismjs-copy="Copy the Bicep!">@(new HtmlString(templateModel?.BicepTemplate))</code></pre>
        </div>
    </div>
</div>

<hr />

<h2 class="display-6 text-center mb-4">ARM template</h2>
<div class="container my-4">
    @if (!string.IsNullOrWhiteSpace(templateModel?.ArmTemplate))
    {
        <div class="code-container" data-bs-theme="auto">
            <div data-prismjs-copy-timeout="500">
                <pre><code class="language-json" data-prismjs-copy="Copy the ARM template">@(new HtmlString(templateModel.ArmTemplate))</code></pre>
            </div>
        </div>
    }
</div>

<!-- Modal for Deploy to Azure Information -->
<div class="modal fade" id="deployToAzureInfoModal" tabindex="-1" aria-labelledby="deployToAzureInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <!-- Close (X) Button -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5 class="modal-title mb-3" id="deployToAzureInfoModalLabel">Deploy to Azure</h5>
                <p>
                    Use this option to deploy your ARM templates to your own Subscription! - Check, test and deploy!
                </p>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Add to Bicep Template Registry Information -->
<div class="modal fade" id="addToRegistryInfoModal" tabindex="-1" aria-labelledby="addToRegistryInfoModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <!-- Close (X) Button -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <h5 class="modal-title mb-3" id="addToRegistryInfoModalLabel">Add to Global Template Library</h5>
                <p>
                    Use this option to add your Bicep templates to the official Template Library. Before you create the package do make sure your templates are tested and valid. This allows for easier management and sharing of your infrastructure as code.
                </p>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/prism/components/prism-core.min.js"></script>
    <script src="~/lib/prism/plugins/autoloader/prism-autoloader.min.js"></script>
    <script>
        // Function to update Prism theme based on current theme
        function updatePrismTheme(isDark) {
            const lightTheme = document.getElementById('prismLightTheme');
            const darkTheme = document.getElementById('prismDarkTheme');
            
            lightTheme.disabled = isDark;
            darkTheme.disabled = !isDark;
        }

        // Initial theme setup
        const htmlElement = document.documentElement;
        updatePrismTheme(htmlElement.getAttribute('data-bs-theme') === 'dark');

        // Listen for theme changes
        document.addEventListener('themeChanged', (e) => {
            updatePrismTheme(e.detail.theme === 'dark');
        });
    </script>
}
